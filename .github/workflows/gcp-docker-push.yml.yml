name: Build and Push to GCP Artifact Registry ..

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repository
      - name: Checkout Code
        uses: actions/checkout@v4

      # Step 2: Create config.json from GitHub Secret
      - name: Load GCP Config
        run: |
          echo "${{ secrets.MY_JSON_SECRET }}" > config.json
          echo "✅ Config file created"
          cat config.json

          GCP_PROJECT_ID=$(jq -r '.GCP_PROJECT_ID' config.json)
          GCP_REPO_NAME=$(jq -r '.GCP_REPO_NAME' config.json)

          echo "GCP_PROJECT_ID=$GCP_PROJECT_ID" >> $GITHUB_ENV
          echo "GCP_REPO_NAME=$GCP_REPO_NAME" >> $GITHUB_ENV
          echo "GCP_REGION=us-central1" >> $GITHUB_ENV

      # Step 3: Authenticate with Google Cloud
      - name: Set up GCP authentication
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      # Step 4: Configure Docker to use Artifact Registry credentials
      - name: Configure Docker for Artifact Registry
        run: |
          gcloud auth configure-docker $GCP_REGION-docker.pkg.dev --quiet

      # Step 5: Build and push Docker image
      - name: Build and Push Docker Image
        run: |
          IMAGE_URI="$GCP_REGION-docker.pkg.dev/$GCP_PROJECT_ID/$GCP_REPO_NAME/nodejs-cicd-app"

          echo "Building Docker image: $IMAGE_URI"

          docker build -t $IMAGE_URI:latest .
          docker push $IMAGE_URI:latest

          # Optional: Tag with commit SHA
          SHORT_SHA=$(echo $GITHUB_SHA | cut -c1-7)
          docker tag $IMAGE_URI:latest $IMAGE_URI:$SHORT_SHA
          docker push $IMAGE_URI:$SHORT_SHA

          echo "✅ Docker image pushed successfully to $IMAGE_URI"

      # Step 6: Verify image in registry
      - name: Verify Pushed Image
        run: |
          echo "Listing images in GAR..."
          gcloud artifacts docker images list $GCP_REGION-docker.pkg.dev/$GCP_PROJECT_ID/$GCP_REPO_NAME
